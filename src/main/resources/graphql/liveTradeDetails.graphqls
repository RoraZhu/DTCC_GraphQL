type LiveTradeDetails{
       tradeDetailId : Int!
       tdBagObjectType : Int
       accruedInterestAmount: Float
       accountId: Int
       exchangeRate: Float
       settlementAmount: Float
       quantityAllocated : Int
       versionOfTradeComponent : Int
       tradeAmount: Float
       netCashAmount: Float
       clientAllocationReference:String
       alertCountryCode : Int
       alertMethodType : Int
       alertSecurityType : Int
       alertSettlementModelName :String
       tradeSideId : Int
       additionalTextString:String
       partyFundNameSa :String
       originalFaceAmount : Float
       directedCommissionsA : Float
       counterPartyDetailId : Int
       matchStatus : Int
       errorStatus : Int
       tdHighestErrorSeverityDtm :String
       matchStatusDtm :String
       errorStatusDtm :String
       cancelTextString :String
       transportMessageId :String
       userId : Int
       teVisibleOnly :Boolean
       rejectFlag :Boolean
       isitcRejectReasonCode : Int
       rejectComponentTextString :String
       rejectComponentDtm :String
       loginId :String
       originatorOfMessageId : Int
       counterPartyOrgId : Int
       firstMatchStatusNmat :String
       firstMatchStatusMism :String
       packedCommissions : Float
       asynchErrorExists :Boolean
       reportedPrice : Float
       markupMarkdown : Float
       assetBacked :Boolean
       marketMaker :String
       currentFaceValue : Float
       clearingBrokerOrgId : Int
       clearingBroker :String
       tdForcematchflag : Int
       dmlAction: String
       dmlTimestamp :String
       dmlScn : Int
       workflowModifiers : Int
       accessCodeLeId : Int
       largeTradeId : Int
}
extend type Query{
     findLiveTradeDetailsByTradeDetailId(tradeDetailId: Int): [LiveTradeDetails]
 }
